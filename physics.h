#ifndef _PHYSICS_HEADER
#define _PHYSICS_HEADER

#include "cell.h"

/**
 * Fluid viscosity. It slows down the cell's movement in the fluid.
 */
#define LAMBDA 0.1

/**
 * Size of each misuration timestep.
 */
#define TIMESTEP 0.2

#define PI 3.14159

/**
 * Function to compute acceleration using Langevin equation depending on given parameters.
 * @param velocity body current velocity
 * @param collision_forces collision forces felt by the body
 * @param mass body mass
 */
double langevin_equation(double velocity, double collision_forces, double mass);

/**
 * Getter for body mass depending on its type. For example, lymphocytes are way heavier than antibodies.
 * @param type cell type
 * @return cell's mass
 */
double get_mass(Type type);

/**
 * Using Langevin equation and following a brownian motion inside a fluid, it updates cells coordinates
 * inside 2D grid, so moving with discrete steps.
 * @param cell cell to update their current velocity and position
 * @param new_grid grid to place cell in next timestep
 */
void movement(Cell *cell, Grid *new_grid);

/**
 * It generates two random numbers following a normal distribution.
 * @param box_muller_number two numbers following a normal distribution generated by Box-Muller method.
 */
void box_muller(float box_muller_number[2]);

#endif